# Executable files
export PATH=$HOME/.local/bin:$PATH
export PATH=/opt/AppImages:$PATH


# Ranger
export EDITOR=editor  # Specify text editor for ranger (also change `sensible-editor`)

# Press `Q`: change to ranger’s directory on quit
# https://github.com/ranger/ranger/wiki/Integration-with-other-programs#allow-deciding-whether-your-shell-should-change-to-rangers-directory-on-quit
function ranger {
    local IFS=$'\t\n'
    local tempfile="$(mktemp -t tmp.XXXXXX)"
    local ranger_cmd=(
        command
        ranger
        --cmd="map Q chain shell echo %d > "$tempfile"; quitall"
    )

    ${ranger_cmd[@]} "$@"
    if [[ -f "$tempfile" ]] && [[ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]]; then
        cd -- "$(cat "$tempfile")" || return
    fi
    command rm -f -- "$tempfile" 2>/dev/null
}


# Aliases

# Git
alias gst="git status"
alias glg="git log --stat"
alias gdi="git diff"

# Dotfiles.git
alias cit="git --git-dir=$HOME/Projects/Dotfiles.git --work-tree=$HOME"  # cit: config + git
alias cst="cit status"
alias clg="cit log --stat"
alias cdi="cit diff"
alias cdis="cit diff --staged"

alias lg="lazygit"
alias aria2="(aria2c --enable-rpc --rpc-listen-all >> /tmp/aria2.log 2>&1 &)"
alias ra="ranger"
alias diff="diff --color"
alias proxy="export http{s,}_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890"
alias cs=". $HOME/.local/bin/conda-switch.sh"


# Weird empty folder in $HOME
[ -d $HOME/模板/ ] && rmdir $HOME/模板/


# Load conda on demand (conda will cause a slowdown in zsh initialization)
function conda {
    if [[ ! "miniconda3/bin" =~ $PATH ]]; then
        # >>> conda initialize >>>
        # !! Contents within this block are managed by 'conda init' !!
        __conda_setup="$('$HOME/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
        if [ $? -eq 0 ]; then
            eval "$__conda_setup"
        else
            if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
                . "$HOME/miniconda3/etc/profile.d/conda.sh"
            else
                export PATH="$HOME/miniconda3/bin:$PATH"
            fi
        fi
        unset __conda_setup
        # <<< conda initialize <<<
    fi
    conda "$@"
}


# fzf
FZF_COMPLETION_TRIGGER='\'


# Completion options

# Show dotfiles in completion
_comp_options+=(globdots)

# Ignore . and .. in completion
zstyle ':completion:*' special-dirs false


# Plugins
if [ -z "$ZSH" ]; then
    # oh-my-zsh will import these plugins and scripts automatically
    PLUGIN_HOME="$HOME/.oh-my-zsh/custom/plugins"
    SCRIPT_HOME="$HOME/.oh-my-zsh/custom"

    # fzf
    source /usr/share/doc/fzf/examples/key-bindings.zsh
    source /usr/share/doc/fzf/examples/completion.zsh

    source $PLUGIN_HOME/fzf-tab/fzf-tab.plugin.zsh

    {
        # xsource() of grml will append some positional arguments: ".zshrc.local" "..." (i.e. filename)
        # which needs to be removed, or fzf-git.sh will breakdown.
        args="$@" && shift "${#argv}"

        # wget https://raw.githubusercontent.com/junegunn/fzf-git.sh/main/fzf-git.sh -O ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/fzf-git.zsh
        source $SCRIPT_HOME/fzf-git.zsh

        # restore the arguments
        [ -n "$args" ] && set -- "$args" && unset args
    }

    # fish-like
    source $PLUGIN_HOME/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh
    source $PLUGIN_HOME/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh
fi


# Prompt
if [ -n "$grml_prompt_token_default" ]; then
    grml_prompt_token_default[dollar]='$ '
    zstyle ':prompt:grml:left:setup' items newline change-root user at host path vcs time rc newline dollar
    zstyle ':prompt:grml:*:items:at' token ' @ '  # Add spaces around '@'
fi


# npm
export PATH="$HOME/.npm-packages/bin:$PATH"


# Homebrew
export PATH="$PATH:/home/linuxbrew/.linuxbrew/bin"
export HOMEBREW_API_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api"
export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles"
export HOMEBREW_BREW_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git"
export HOMEBREW_CORE_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git"
export HOMEBREW_PIP_INDEX_URL="https://pypi.tuna.tsinghua.edu.cn/simple"


# Autostart X at login
# https://wiki.archlinux.org/title/Xinit#Autostart_X_at_login
if [ -z "${DISPLAY}" ] && [ "$(tty)" = "/dev/tty1" ]; then
  exec startx
fi

