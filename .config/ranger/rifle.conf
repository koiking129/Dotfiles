# vim: ft=cfg

#-------------------------------------------
# High priority
#-------------------------------------------
# draw.io
ext drawio, has drawio, X, flag f = drawio "$@"

#-------------------------------------------
# Text files
#-------------------------------------------
# Define the editor for text files as first action
mime ^text, label editor = ${VISUAL:-$EDITOR} -- "$@"
mime ^text, label sudoe  = sudo -e -- "$@"

# Identify scripts by the extension
!mime ^text, label editor, ext xml|json|csv|tex|py|pl|rb|rs|js|sh|php|dart|lua = ${VISUAL:-$EDITOR} -- "$@"
# Identify scripts by the mime type
!ext json, label editor, mime json$ = ${VISUAL:-$EDITOR} -- "$@"

# HTML
ext x?html?, X, flag f, has firefox-developer-edition = firefox-developer-edition -- "$@"
ext x?html?, X, flag f, has firefox,                  = firefox -- "$@"

# Misc
ext 1              = man "$1"
name ^[mM]akefile$ = make

#-------------------------------------------
# Video/Audio/Image
#-------------------------------------------
# With a GUI
mime ^video, has mpv, X, flag f = mpv -- "$@"
mime ^image, has feh, X, flag f = feh -- "$@"

# Without X
mime ^video, !X,  terminal, has mpv = mpv -- "$@"
mime ^audio|ogg$, terminal, has mpv = mpv -- "$@"

#-------------------------------------------
# Documents
#-------------------------------------------
ext pdf,               has okular, X, flag f = okular -- "$@"
ext pdf,               has evince, X, flag f = evince -- "$@"
ext pptx?|docx?|xlsx?, has wps,    X, flag f = wps "$@"

#-------------------------------------------
# Archives
#-------------------------------------------

# avoid password prompt by providing empty password
ext 7z, has 7z = 7z -p l "$@" | "$PAGER"

# Listing and extracting archives without atool:
ext tar|gz|bz2|xz, has tar = tar vvtf "$1" | "$PAGER"
ext tar|gz|bz2|xz, has tar = for file in "$@"; do tar vvxf "$file"; done
ext bz2, has bzip2 = for file in "$@"; do bzip2 -dk "$file"; done
ext zip, has unzip = unzip -l "$1" | "$PAGER"
ext zip, has unzip = for file in "$@"; do unzip -d "${file%.*}" "$file"; done
ext ace, has unace = unace l "$1" | "$PAGER"
ext ace, has unace = for file in "$@"; do unace e "$file"; done
ext rar, has unrar = unrar l "$1" | "$PAGER"
ext rar, has unrar = for file in "$@"; do unrar x "$file"; done

#-------------------------------------------
# Fonts
#-------------------------------------------
mime ^font, has fontforge, X, flag f = fontforge "$@"

#-------------------------------------------
# Flag t fallback terminals
#-------------------------------------------
mime ^ranger/x-terminal-emulator, has kitty = kitty -- "$@"
mime ^ranger/x-terminal-emulator, has alacritty = alacritty -e "$@"
mime ^ranger/x-terminal-emulator, has st = st -e "$@"

#-------------------------------------------
# Generic file openers
#-------------------------------------------
label open, has xdg-open = xdg-open "$@"

# Define the editor for non-text files as last action
              !mime ^text, !ext xml|json|csv|tex|py|pl|rb|rs|js|sh|php|dart|lua = ask
label editor, !mime ^text, !ext xml|json|csv|tex|py|pl|rb|rs|js|sh|php|dart|lua = ${VISUAL:-$EDITOR} -- "$@"

#-------------------------------------------
# Low priority
#-------------------------------------------
# Execute a file as a program/script
ext py  = python -- "$1"
ext pl  = perl -- "$1"
ext rb  = ruby -- "$1"
ext js  = node -- "$1"
ext sh  = sh -- "$1"
ext php = php -- "$1"
ext lua = lua -- "$1"
mime application/x-.*executable = "$1"
